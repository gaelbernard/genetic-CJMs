import randomclass Journey:    """Xes is the standard to store event logs: http://www.xes-standard.org/    this class provide the means to load and parse it.    """    def __init__(self, activity_set):        #self.close_traces = []        self.close_traces_indices = set()        self.sum_edit_distance_from_observed_traces = 0        self.activity_set = activity_set        self.activities = []    #Add an activity in a random place along the journey    def add_random_activity(self):        self.activities.insert(random.randrange(len(self.activities)+1), random.choice(self.activity_set))    def add_complete_journey(self, activites):        self.activities = activites    #Delete an activity in a random place along the journey    def delete_random_activity(self):        if len(self.activities)>1:            self.activities.pop(random.randrange(len(self.activities)))    def add_close_observed_traces(self, traces_id):        self.close_traces_indices.update(traces_id)    def add_close_observed_traces_with_cost(self, traces_id, cost):        self.close_traces_indices.update(traces_id)        self.sum_edit_distance_from_observed_traces += float(cost*len(traces_id))    def reset_close_observed_traces(self):        self.close_traces_indices = set()        self.sum_edit_distance_from_observed_traces = 0    def __str__(self):        output = ""        output += '\n'+str(self.activities) + ')\n'        return output